---
import BaseLayout from "../../components/layout/BaseLayout.astro";
import Categories from "../../components/shared/Categories.astro";
import ArticleCard from "../../components/ui/ArticleCard.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseHero from "../../components/shared/BaseHero.astro";
import Container from "../../components/ui/Container.astro";
import ContentList from "../../components/shared/ContentList.astro";
type Bookmark = CollectionEntry<"bookmarks">;

const bookmarks = await getCollection("bookmarks");
const types = [...new Set(bookmarks.map((bookmark: Bookmark) => bookmark.data.type))];
const sortedBookmarks = bookmarks.sort(
  (a: Bookmark, b: Bookmark) => b.data.createdAt.getTime() - a.data.createdAt.getTime()
);
---

<BaseLayout title="Bookmarks" description="My collection of interesting reads and resources">
  <Container>
    <BaseHero title="Bookmarks" description="My collection of interesting reads and resources" />

    <Categories plural categories={types} currentPath={Astro.url.pathname} basePath="bookmarks" />

    <ContentList>
      {
        sortedBookmarks.map((bookmark) => (
          <ArticleCard
            title={bookmark.data.title}
            description={bookmark.data.description}
            url={bookmark.data.url}
            date={bookmark.data.createdAt}
            tags={[bookmark.data.type, `by ${bookmark.data.author}`]}
          />
        ))
      }
    </ContentList>
  </Container>
</BaseLayout>
